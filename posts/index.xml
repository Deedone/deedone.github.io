<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Tech Adventures</title>
    <link>https://techadv.xyz/posts/</link>
    <description>Recent content in Posts on Tech Adventures</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Oct 2020 14:20:47 +0300</lastBuildDate><atom:link href="https://techadv.xyz/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Problems with Google</title>
      <link>https://techadv.xyz/posts/unexpected-problems/</link>
      <pubDate>Tue, 13 Oct 2020 14:20:47 +0300</pubDate>
      
      <guid>https://techadv.xyz/posts/unexpected-problems/</guid>
      <description>&lt;p&gt;In this post, I want to share some unpleasant stories about me interacting with Google.
Mainly as being a browser extension developer.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Drawing on QR Codes</title>
      <link>https://techadv.xyz/posts/qrart/</link>
      <pubDate>Mon, 25 May 2020 18:46:13 +0300</pubDate>
      
      <guid>https://techadv.xyz/posts/qrart/</guid>
      <description>We&amp;rsquo;ve all seen fancy QR codes with images. Usually, they have a small logo or something in the center. They are very easy to make, and to be honest not very impressive. Just generate your QR and put some image on top, that&amp;rsquo;s all.
That works because all QRs have some amount of data reserved for error correction. You can flip some bits, obscure parts of the code, or use a noisy camera and it would still be readable.</description>
    </item>
    
    <item>
      <title>WebGL tutorial: image processing</title>
      <link>https://techadv.xyz/posts/webgl/</link>
      <pubDate>Sat, 25 Apr 2020 20:00:38 +0300</pubDate>
      
      <guid>https://techadv.xyz/posts/webgl/</guid>
      <description>&lt;p&gt;In this tutorial you will learn how to use WebGL for image processing.
We will cover basic stuff like initialization, texture loading, and simple fragment shaders.
I will try to cover all aspects of interaction with WebGL but you should have a decent understanding of vanilla javascript.
If you want more in-depth explanations, there is a good book called &amp;ldquo;Learn WebGL&amp;rdquo;, check it out.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>First impressions on Rust and Webassembly</title>
      <link>https://techadv.xyz/posts/rust-wasm/</link>
      <pubDate>Mon, 20 Apr 2020 20:45:02 +0300</pubDate>
      
      <guid>https://techadv.xyz/posts/rust-wasm/</guid>
      <description>&lt;p&gt;I implemented &lt;a href=&#34;https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life&#34;&gt;Conway&amp;rsquo;s Game of Life&lt;/a&gt; to familiarize myself with this setup. Controls should be self-explanatory. You can also draw on a field. (Drawing only works from PC, not from mobile devices)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hello World!</title>
      <link>https://techadv.xyz/posts/hello-world/</link>
      <pubDate>Sun, 19 Apr 2020 15:53:07 +0300</pubDate>
      
      <guid>https://techadv.xyz/posts/hello-world/</guid>
      <description>Just a small blog where I will document my exploration of interesting technologies.
Hope it will help me to retain my motivation more easily. Also, I am planning to showcase some projects here soon. Too many projects worth sharing ar now buried with old hard drives.</description>
    </item>
    
  </channel>
</rss>
